h1. Download and Installation

The installation instructions are slightly different for each operating system.
If you are using Ruby, pick the one that best matches your operating system.
If you are using JRuby, see the instructions for "JRuby":#jruby and also read
about using "JRuby and Ruby side by side":#using_jruby_and_ruby.


p(note). The current release of Buildr works with Ruby 1.8 and JRuby 1.1RC2.
We do not yet support Ruby 1.9 yet.
  

h2.  Linux, BSD, Cygwin

To get started you will need a recent version of Ruby, Ruby Gems and build
tools for compiling native libraries (Make and GCC).

On Ubuntu you can setup your environment by installing the following packages:

{{{!sh
$ sudo apt-get install ruby-full
$ sudo apt-get install ruby1.8-dev
$ sudo apt-get install build-essential
$ sudo apt-get install libopenssl-ruby
}}}

Other distributions may use different package manages, like @yum@ and @emerge@.

We recommend you first upgrade to the latest version of Ruby gems:

{{{!sh
$ sudo gem update --system
}}}

Before installing Buildr, please set the @JAVA_HOME@ environment variable to
point to your JDK distribution.  Next, use Ruby Gem to install Buildr:

{{{!sh
$ sudo env JAVA_HOME=$JAVA_HOME gem install buildr
}}}

To upgrade to a new version of Buildr:

{{{!sh
$ sudo env JAVA_HOME=$JAVA_HOME gem update buildr
}}}

To install a specific version of Buildr:

{{{!sh
$ sudo env JAVA_HOME=$JAVA_HOME gem install buildr -v 1.3.0
}}}

You can also use this script "to install Buildr on
Linux":scripts/install-linux.sh.  The script will either install or upgrade
Buildr to the latest version.  It will also upgrade RubyGems to version 1.0.1
or later, and if necessary install Ruby 1.8.6 using yum (RPM) or apt-get (deb).


h2.  OS/X

OS/X 10.5 (Leopard) comes with the latest version of Ruby 1.8.  If you are
using an older version of OS/X, you will first need to upgrade to a recent
version of Ruby.  You can install Ruby using MacPorts or Fink, or use the
"One-Click Installer":http://rubyosx.rubyforge.org/.

We recommend you first upgrade to the latest version of Ruby gems:

{{{!sh
$ sudo gem update --system
}}}

Before installing Buildr, please set the @JAVA_HOME@ environment variable to
point to your JDK distribution:

{{{!sh
$ export JAVA_HOME=/Library/Java/Home
}}}

To install Buildr:

{{{!sh
$ sudo env JAVA_HOME=$JAVA_HOME gem install buildr
}}}

To upgrade to a new version of Buildr:

{{{!sh
$ sudo env JAVA_HOME=$JAVA_HOME gem update buildr
}}}

To install a specific version of Buildr:

{{{!sh
$ sudo env JAVA_HOME=$JAVA_HOME gem install buildr -v 1.3.0
}}}

You can also use this script "to install Buildr on
OS/X":scripts/install-osx.sh.  The script will either install or upgrade Buildr
to the latest version.  It will also upgrade RubyGems to version 1.0.1 or
later, and if necessary install Ruby 1.8.6 using MacPorts or Fink.


h2. Windows

If you don't already have Ruby installed, now is the time to do it.  The
easiest way to install Ruby is using the "one-click
installer":http://rubyinstaller.rubyforge.org/.

We recommend you first upgrade to the latest version of Ruby gems:

{{{!sh
$ sudo gem update --system
}}}

Before installing Buildr, please set the @JAVA_HOME@ environment variable to
point to your JDK distribution.  Next, use Ruby Gem to install Buildr:

{{{!sh
> gem install buildr
}}}

Buildr uses several libraries that include native extensions.  During
installation it will ask you to pick a platform for these libraries.  By
selecting @mswin32@ it will download and install pre-compiled DLLs for these
extensions.

To upgrade to a new version of Buildr:

{{{!sh
> gem update buildr
}}}

To install a specific version of Buildr:

{{{!sh
> gem install buildr -v 1.3.0
}}}


h2. JRuby

If you don't already have JRuby 1.1RC2 or later installed, you can download it
from the "JRuby site":http://dist.codehaus.org/jruby/.

After uncompressing JRuby, make sure you set the @JAVA_HOME@ environment
variable to point to your JDK distribution.

Finally update your @PATH@ to include both JRuby and Java executables, so you
can run JRuby with the command @jruby@.

For Windows:

{{{!sh
> set JRUBY_HOME=<path to JRuby>
> set PATH=%JRUBY_HOME%/bin;%JAVA_HOME%/bin;%PATH%
> gem install buildr
}}}

And for Unix:

{{{!sh
$ export JRUBY_HOME=<path to JRuby>
$ export PATH=$JRUBY_HOME/bin:$JAVA_HOME/bin:$PATH
$ gem install buildr
}}}

Once installed, you will find the @buildr@ exectuable in the @JRUBY_HOME/bin@
directory.

To upgrade to a new version of Buildr:

{{{!sh
$ sudo gem update buildr
}}}

To install a specific version of Buildr:

{{{!sh
$ sudo gem install buildr -v 1.3.0
}}}

When using JRuby you will notice that Buildr takes a few seconds to start up.
To speed it up, we recommend switching to Java 1.6 and running the JVM in
client mode:

{{{!
$ export JAVA_OPTS=-client
}}}


h2.  Using JRuby and Ruby

Ruby and JRuby maintain separate Gem repositories, and in fact install slightly
different versions of the Buildr Gem (same functionality, different
dependencies).  If you want to use Buildr with both, you must install it
separately for each one.

If you installed JRuby but don't have Ruby installed on your machine, the @gem@
command will install Buildr for JRuby, and the @buildr@ command will run Buildr
using JRuby.

Note that some operating systems, specifically OS/X and various flavors of
Linux, come with Ruby pre-installed, you can check this out by running the
@ruby@ command.

You can use the @PATH@ environment variable to determine which one is used by
default.  The instructions above show you how to place JRuby first on the
@PATH@, afterwhich you can install and use Buildr for JRuby.

If you need to use both versions together, you can pick Ruby or JRuby and run
the various commands using the @-S@ argument.  For example, to install and run
Buildr for JRuby, even though Ruby appears first on the @PATH@:

{{{!
$ jruby -S gem install buildr
$ jruby -S buildr
}}}

To find out which version you are currently running:

{{{!
$ buildr help
}}}

When running on JRuby you will see @(JRuby)@ next to Buildr version number.


h2.  Binaries and Source Code

At the moment we do not make offical Apache binary and source distributions.
Unofficial binary and source distributions are available form
"RubyForge":http://rubyforge.org/projects/buildr.
